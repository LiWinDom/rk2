name: Publication

on:
  push:
    tags:
      - "*"

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
        
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          
  build_linux:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v3

      - name: Configure project
        working-directory: ./
        run: cmake -S ./ -B ./build -DCMAKE_BUILD_TYPE=Release -DCPACK_PACKAGE_VERSION=${{github.ref_name}}

      - name: Build project
        working-directory: ./
        run: cmake --build ./build --target interpreter

      - name: Pack project
        working-directory: ./build/
        run: cpack .

      - name: Update release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: Interpreter-${{github.ref_name}}.deb
          asset_path: ./bin/Release/Interpreter-${{github.ref_name}}.deb
          asset_content_type: application/deb

  build_windows_x86:
    runs-on: windows-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v3

      - name: Configure project
        working-directory: ./
        run: cmake -S ./ -B ./build -DCMAKE_BUILD_TYPE=Release -DCMAKE_BUILD_ARCHITECTURE=Win32 -A Win32 -DCPACK_PACKAGE_VERSION=${{github.ref_name}}

      - name: Build project
        working-directory: ./
        run: cmake --build ./build --target interpreter --config Release

      - name: Update release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: Interpreter-${{github.ref_name}}-x86.exe
          asset_path: ./bin/Win32/Release/Interpreter.exe
          asset_content_type: application/exe
  build_windows_x64:
    runs-on: windows-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v3

      - name: Configure project
        working-directory: ./
        run: cmake -S ./ -B ./build -DCMAKE_BUILD_TYPE=Release -DCMAKE_BUILD_ARCHITECTURE=x64 -A x64 -DCPACK_PACKAGE_VERSION=${{github.ref_name}}

      - name: Build project
        working-directory: ./
        run: cmake --build ./build --target interpreter --config Release

      - name: Update release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: Interpreter-${{github.ref_name}}-x64.exe
          asset_path: ./bin/x64/Release/Interpreter.exe
          asset_content_type: application/exe

  build_macos:
    runs-on: macos-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v3

      - name: Configure project
        working-directory: ./
        run: cmake -S ./ -B ./build -DCMAKE_BUILD_TYPE=Release -DCPACK_PACKAGE_VERSION=${{github.ref_name}}

      - name: Build project
        working-directory: ./
        run: cmake --build ./build --target interpreter

      - name: Pack project
        working-directory: ./build/
        run: cpack .

      - name: Update release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: Interpreter-${{github.ref_name}}.dmg
          asset_path: ./bin/Release/Interpreter-${{github.ref_name}}.dmg
          asset_content_type: application/dmg
